{"version":3,"file":"normalize.js","sourceRoot":"","sources":["../../../src/utils/normalize.ts"],"names":[],"mappings":";;AAAA,uCAA0C;AAE1C,IAAM,GAAG,GAAG,OAAO,CAAC;AAEpB;;GAEG;AACH,8DAA8D;AAC9D,SAAgB,yBAAyB,CAAC,IAAa;;IACrD,IAAM,UAAU,GAAY,iBAAS,CAAC,IAAI,CAAC,CAAC;IAC5C,IAAI,UAAU,KAAK,IAAI,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;QACzD;YACE,GAAC,GAAG,IAAG,UAAU;eACjB;KACH;SAAM;QACL,8DAA8D;QAC9D,OAAO,UAAiC,CAAC;KAC1C;AACH,CAAC;AAVD,8DAUC","sourcesContent":["import { normalize } from '@sentry/utils';\n\nconst KEY = 'value';\n\n/**\n * Converts any input into a valid record with string keys.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function convertToNormalizedObject(data: unknown): Record<string, any> {\n  const normalized: unknown = normalize(data);\n  if (normalized === null || typeof normalized !== 'object') {\n    return {\n      [KEY]: normalized,\n    };\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return normalized as Record<string, any>;\n  }\n}\n"]}